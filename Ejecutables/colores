#!/bin/bash

#Colores Instalador
msgi() {
    BLANCO='\033[1;37m' && ROJO='\033[0;31m' && VERDE='\033[0;32m' && AMARELO='\033[0;33m'
    AZUL='\033[0;34m' && MORADO='\033[0;35m' && CIAN='\033[0;36m' && NEGRITA='\033[1m' && SINCOLOR='\033[0m'
    case $1 in
    -ne) cor="${ROJO}${NEGRITA}" && echo -ne "${cor}${2}${SINCOLOR}" ;;
    -ama) cor="${AMARELO}${NEGRITA}" && echo -e "${cor}${2}${SINCOLOR}" ;;
    -verm) cor="${AMARELO}${NEGRITA}[!] ${ROJO}" && echo -e "${cor}${2}${SINCOLOR}" ;;
    -azu) cor="${CIAN}${NEGRITA}" && echo -e "${cor}${2}${SINCOLOR}" ;;
    -verd) cor="${VERDE}${NEGRITA}" && echo -e "${cor}${2}${SINCOLOR}" ;;
    -bra) cor="${ROJO}" && echo -ne "${cor}${2}${SINCOLOR}" ;;
    "-bar2" | "-bar") cor="${MORADO}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo -e "${SINCOLOR}${cor}${SINCOLOR}" ;;
    esac
}

# interfaz de colores
msg(){
  COLOR[0]='\033[1;37m' #BRAN='\033[1;37m'
  COLOR[1]='\033[0;31m' #VERMELHO='\033[0;31m'
  COLOR[2]='\033[0;32m' #VERDE='\033[0;32m'
  COLOR[3]='\033[0;33m' #AMARELO='\033[0;33m'
  COLOR[4]='\033[0;34m' #AZUL='\033[0;34m'
  COLOR[5]='\033[0;35m' #MORADO='\033[0;35m'
  COLOR[6]='\033[0;36m' #CIAN='\033[0;36m'
  COLOR[7]='\033[0;37m' #GRIS='\033[0;37m'
  COLOR[8]='\033[0;90m' #GRIS_OSCURO='\033[0;90m'
  COLOR[9]='\033[0;94m' #AZUL_CLARO='\033[0;94m'

  NEGRITO='\033[1m'
  SINCOLOR='\033[0m'

  case $1 in
    -ne)   cor="${COLOR[1]}${NEGRITO}" && echo -ne "${cor}${2}${SINCOLOR}";;
    -nazu) cor="${COLOR[6]}${NEGRITO}" && echo -ne "${cor}${2}${SINCOLOR}";;
    -nverd)cor="${COLOR[2]}${NEGRITO}" && echo -ne "${cor}${2}${SINCOLOR}";;
    -nama) cor="${COLOR[3]}${NEGRITO}" && echo -ne "${cor}${2}${SINCOLOR}";;
    -ama)  cor="${COLOR[3]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}";;
    -verm) cor="${COLOR[3]}${NEGRITO}[!] ${COLOR[1]}" && echo -e "${cor}${2}${SINCOLOR}";;
    -verm2)cor="${COLOR[1]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}";;
    -verm3)cor="${COLOR[1]}" && echo -e "${cor}${2}${SINCOLOR}";;
    -teal) cor="${COLOR[6]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}";;
    -teal2)cor="${COLOR[6]}" && echo -e "${cor}${2}${SINCOLOR}";;
    -blak) cor="${COLOR[8]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}";;
    -blak2)cor="${COLOR[8]}" && echo -e "${cor}${2}${SINCOLOR}";;
    -azu)  cor="${COLOR[4]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}";;
    -blu)  cor="${COLOR[9]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}";;
    -blu1) cor="${COLOR[9]}" && echo -e "${cor}${2}${SINCOLOR}";;
    -verd) cor="${COLOR[2]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}";;
    -bra)  cor="${COLOR[7]}${NEGRITO}" && echo -e "${cor}${2}${SINCOLOR}";;
    -bar)  cor="${COLOR[5]}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo -e "${SINCOLOR}${cor}${SINCOLOR}";;
    -bar2) cor="${COLOR[9]}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo -e "${SINCOLOR}${cor}${SINCOLOR}";;
    -bar3) cor="${COLOR[1]}-----------------------------------------------------" && echo -e "${SINCOLOR}${cor}${SINCOLOR}";;
    -bar4) cor="${COLOR[6]}-----------------------------------------------------" && echo -e "${SINCOLOR}${cor}${SINCOLOR}";;
    -bar5)cor="\033[0;90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo -e "${SINCOLOR}${cor}${SINCOLOR}";;
    -bar6)cor="\033[0;35m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" && echo -e "${SINCOLOR}${cor}${SINCOLOR}";;
  esac
}

# centrado de texto
print_center(){
  if [[ -z $2 ]]; then
    text="$1"
  else
    col="$1"
    text="$2"
  fi

  while read line; do
    unset space
    x=$(( ( 54 - ${#line}) / 2))
    for (( i = 0; i < $x; i++ )); do
      space+=' '
    done
    space+="$line"
    if [[ -z $2 ]]; then
      msg -azu "$space"
    else
      msg "$col" "$space"
    fi
  done <<< $(echo -e "$text")
}

# títulos y encabezados
title(){
    clear
    msg -bar6
    if [[ -z $2 ]]; then
      print_center -azu "$1"
    else
      print_center "$1" "$2"
    fi
    msg -bar6
 }

# finalización de tareas
 enter(){
  msg -bar5
  text="►► Presione enter para continuar ◄◄"
if [[ -z $1 ]]; then
   print_center -ama "$text"
 else
   print_center "$1" "$text"
 fi
 read
}

# opción, regresar volver/atrás
back(){
   msg -bar5
   echo -ne "$(msg -verd " [0]") $(msg -verm2 ">") " && msg -bra "\033[1;47m\033[0;30mVOLVER\033[0m"
   msg -bar5
}

# menú maker (opciones 1, 2, 3,.....)
menu_func(){
 local options=${#@}
 local array
 for((num=1; num<=$options; num++)); do
   echo -ne "$(msg -verd " [$num]") $(msg -verm2 ">") "
   array=(${!num})
   case ${array[0]} in
     "-vd")echo -e "\033[1;33m[!]\033[1;32m ${array[@]:1}";;
     "-vm")echo -e "\033[1;33m[!]\033[1;31m ${array[@]:1}";;
     "-fi")echo -e "${array[@]:2} ${array[1]}";;
     -bar|-bar2|-bar3|-bar4)echo -e "\033[1;37m${array[@]:1}\n$(msg ${array[0]})";;
     *)echo -e "\033[1;37m${array[@]}";;
   esac
 done
}

# opción de selección numérica
selection_fun(){
 local selection="null"
 local range
 if [[ -z $2 ]]; then
   opcion=$1
   col="-nazu"
 else
   opcion=$2
   col=$1
 fi
 for((i=0; i<=$opcion; i++)); do range[$i]="$i "; done
 while [[ ! $(echo ${range[*]}|grep -w "$selection") ]]; do
   msg "$col" " Seleccione una Opción: " >&2
   read selection
   tput cuu1 >&2 && tput dl1 >&2
 done
 echo $selection
}

in_opcion(){
 unset opcion
 if [[ -z $2 ]]; then
     msg -nazu " $1: " >&2
 else
     msg $1 " $2: " >&2
 fi
 read opcion
 #echo "$opcion"
}

in_opcion_down(){
 dat=$1
 length=${#dat}
 cal=$(( 22 - $length / 2 ))
 line=''
 for (( i = 0; i < $cal; i++ )); do
   line+='╼'
 done
 echo -e " $(msg -verm3 "╭$line╼[")$(msg -azu "$dat")$(msg -verm3 "]")"
 echo -ne " $(msg -verm3 "╰╼")\033[37;1m> " && read opcion
}

del(){
 for (( i = 0; i < $1; i++ )); do
   tput cuu1 && tput dl1
 done
}

export -f msg
export -f selection_fun
export -f menu_func
export -f print_center
export -f title
export -f back
export -f enter
export -f in_opcion
export -f in_opcion_down
export -f del
